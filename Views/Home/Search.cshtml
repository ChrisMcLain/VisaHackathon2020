@model SearchModel
@using VisaHackathon2020.Giveback
@using System.Globalization

<div class="text-center m-4 pl-5 pr-5">
    <h1 class="display-4">Find and support local businesses<br/>with Visa Giveback</h1>
</div>

<hr/>

<ul class="nav nav-pills justify-content-center mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <a id="local-pill" class="nav-link nav-link-visa" onclick="showInput(false)" href="#">Help Your Neighborhood</a>
    </li>
    <li class="nav-item" role="presentation">
        <a id="expanded-pill" class="nav-link nav-link-visa" onclick="showInput(true)" href="#">Expand Your Horizons</a>
    </li>
</ul>

<div class="pr-5 pl-5">
    <form action="@Url.Action("Search", "Home")">
        <div class="form-inline justify-content-center">
            <select multiple id="category-selector" name="category" class="selectpicker show-tick form-control"
                    data-live-search="true" title="Select a Category" onclick="validateForm()" data-style="btn-outline-visa"
                    data-selected-text-format="count > 2" data-actions-box="true" data-width="25em">
                @foreach (var category in MerchantCategoryService.Categories.OrderBy(n => n.Name))
                {
                    var selected = category.Id > 0 && Model.Category != null && Model.Category.Contains(category.Id);
                    <!option value="@category.Id" @(selected ? "selected" : "")>@category.Name.ToTitleCase()</!option>
                }
            </select>
                
            <button class="btn btn-outline-visa ml-2 mr-2" id="location-button" type="button" onclick="requestLocation()">
                <i class="fa fa-compass"></i>
                <span id="location-name">
                    <span class="text-muted">Locate me</span>
                </span>
            </button>
            
            <input class="form-control ml-2 mr-2" style="width:20em" type="text" id="location-field" 
                   placeholder="Enter a Location" name="search" value="@(Model.SearchQuery ?? "")"/>

            <input type="hidden" id="search-latitude" name="lat" value="@Model.Latitude">
            <input type="hidden" id="search-longitude" name="lng" value="@Model.Longitude">

            <button id="search-button" class="btn btn-visa" type="submit">
                <i class="fas fa-search"></i> Search
            </button>
        </div>
    </form>
</div>

<div class="row mt-3">
    @if (Model.HasResults)
    {
        <div class="col-md-4 overflow-auto w-100" style="height: 500px">
            <small class="text-muted">@Model.Response.Header.NumRecordsReturned businesses found</small>

            @foreach (var business in Model.Response.Response)
            {
                <div id="merchant-button-@business.ResponseValues.VisaStoreId" class="merchant-button card mt-1"
                     onclick="selectMerchant({
                        latitude: @business.ResponseValues.LocationAddressLatitude, 
                        longitude: @business.ResponseValues.LocationAddressLongitude},
                        @business.ResponseValues.VisaStoreId)">

                    <div class="card-body">
                        <strong class="text-visa">@business.ResponseValues.VisaMerchantName</strong>
                        @foreach (var cat in business.ResponseValues.MerchantCategoryCode)
                        {
                            var name = MerchantCategoryService.Categories.Where(n => n.Id == cat);
                            if (name.Any())
                            {
                                <span class="badge badge-visa-orange">@name.First().Name</span>
                            }
                        }
                        <p class="text-muted">
                            <small>@business.ResponseValues.MerchantStreetAddress</small>
                        </p>
                        <button class="btn btn-sm btn-outline-visa-orange">Learn more</button>
                        <button class="btn btn-sm btn-visa" data-toggle="modal"
                                data-target="#donate-modal" data-merchant-id="@business.ResponseValues.VisaMerchantId",
                                data-merchant-name="@business.ResponseValues.VisaMerchantName">
                            Donate
                        </button>
                    </div>
                </div>
            }
        </div>
        <div id="map" class="col-md-8 rounded" style="height: 500px"></div>
        <script>
        function initMap() {
            const mapOptions = {
                center: new google.maps.LatLng(@Model.Latitude, @Model.Longitude),
                zoom: 11,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            
            initGeocoder();
            window.map = new google.maps.Map(document.getElementById('map'), mapOptions);
            
            @foreach (var business in Model.Response.Response)
            {
                @Html.Raw("new google.maps.Marker({position:{lat:" + business.ResponseValues.LocationAddressLatitude
                          + ",lng:" + business.ResponseValues.LocationAddressLongitude + "}, map:window.map});\n")
            }
        }
        
        function selectMerchant(coordinates, storeId) {
            $('.merchant-button').removeClass('border-visa');
            $('#merchant-button-' + storeId).addClass('border-visa');
            moveMap(coordinates);
        }
        
        function moveMap(coordinates) {
            const location = new google.maps.LatLng(coordinates.latitude, coordinates.longitude);
            window.map.panTo(location);
            window.map.setZoom(15);
        }
        </script>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=@(Program.ApiKeys.GoogleMaps)&callback=initMap">
            </script>
    }
    else
    {
        <div class="col-12 rounded bg-light text-muted text-center">
            @if (Model.HasSearched)
            {
                <div class="p-5">
                    <strong>We couldn't find any results for that search.</strong> Why not try another?
                </div>
            }
            else
            {
                <div class="p-5">Click <i class="fas fa-search"></i> to find local results.</div>
            }
        </div>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=@(Program.ApiKeys.GoogleMaps)&callback=initGeocoder">
            </script>
    }
</div>

<script>
function requestLocation() {
    if(navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(onLocationFound, onLocationError)
        $('#location-name').text('Finding your location...');
        $('#locate-button').removeClass('text-visa');
    } else {
        alert('Your browser does not support geolocation.');
        $('#location-name').text('Not supported');
        $('#locate-button').addClass('text-danger');
    }
}

function onLocationFound(position) {
    $('#location-name').text('Using your location');
    $('#locate-button').addClass('text-visa');
    
    $('#search-latitude').prop('value', position.coords.latitude);
    $('#search-longitude').prop('value', position.coords.longitude);
    validateForm();
}

function onLocationError() {
    $('#location-name').text('Unknown');
    $('#locate-button').addClass('text-danger');
    validateForm();
}

function validateForm() {
    var valid = true;
    var selected = $("#category-selector option:selected").length;
    
    if(selected == 0) valid = false;
    if(!$("#search-latitude").val()) valid = false;
    if(!$("#search-longitude").val()) valid = false;
    
    $('#search-button').prop('disabled', !valid);
}

function showInput(expanded) {
    if(expanded) {
        resetLocation();
        $('#location-button').hide();
        $('#location-field').show();
        $('#expanded-pill').addClass('active');
        $('#local-pill').removeClass('active');
    } else {
        requestLocation();
        $('#location-field').val('');
        $('#location-button').show();
        $('#location-field').hide();
        $('#expanded-pill').removeClass('active');
        $('#local-pill').addClass('active');
    }
}

// Set amount via clicking appropriate buttons
function selectAmount(amount) {
    $('#modal-amount').val(amount);
    $('.amount-button').removeClass('active');
    $('.amount-button-' + amount).addClass('active');
}

function initGeocoder() {
    window.geocoder = new google.maps.Geocoder();
}

function resetLocation() {
    $('#search-latitude').prop('value', null);
    $('#search-longitude').prop('value', null);
}

function updateGeocoding() {
    const search = $('#location-field').val();
    
    $('#location-field').removeClass('border-visa', 'border-danger');
    
    resetLocation();
    validateForm();
    
    if(search.length > 2) {
        window.geocoder.geocode({'address': search }, function(results, status) {
            if (status == 'OK') {
                console.log(results)
                $('#search-latitude').prop('value', results[0].geometry.location.lat);
                $('#search-longitude').prop('value', results[0].geometry.location.lng);
                $('#location-field').addClass('border-visa');
            } else {
                $('#location-field').addClass('border-danger');
            }
            validateForm();
        });
    }
}
    
$(function(){
    // Show the correct tab on page load
    showInput(@(Model.ExpandedSearch ? "true" : "false"));
                        
     // Deactivate buttons when typing an amount manually
    $('#modal-amount').on('change', function() { 
        selectAmount(this.value); 
    });
    
    // Geocode any time the user inputs new data
    $('#location-field').on('change', function() {
        updateGeocoding();
    });
    
    // Update validation when category is changed
    $('#category-selector').on('changed.bs.select', function(e, clickedIndex, isSelected, previousValue) {
        validateForm();
    });
    
    // Update opened modals with information about recipient
    $('#donate-modal').on('show.bs.modal', function(event) {
      const button = $(event.relatedTarget); // Button that triggered the modal
      const merchantId = button.data('merchant-id');
      const merchantName = button.data('merchant-name');
      $('#modal-merchant-name').text(merchantName);
      $('#modal-merchant-id').val(merchantId);
    });
});
</script>

<div id="donate-modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Donate</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("Donate", "Home")" method="POST">
                    <input type="hidden" id="modal-merchant-id" name="merchant" value="">
                    <h5 class="text-visa">Recipient</h5>
                    <strong id="modal-merchant-name"></strong>
                    <hr/>

                    <h5 class="text-visa">Amount</h5>
                    <div class="row">
                        @foreach (var amount in new int[] {20, 50, 100, 200})
                        {
                            <div class="col-3">
                                <button type="button" onclick="selectAmount(@amount)"
                                        class="amount-button amount-button-@amount btn btn-block btn-outline-visa">
                                    $@amount
                                </button>
                            </div>
                        }
                    </div>
                    <div class="mt-3 row">
                        <div class="col-9">
                            <input id="modal-amount" type="number" class="form-control border-visa" placeholder="Amount" name="amount"/>
                        </div>
                        <div class="col-3">
                            <select class="selectpicker" data-style="btn-link text-visa" name="currency" data-width="100%">
                                <option selected>USD</option>
                            </select>
                        </div>
                    </div>
                    <hr/>

                    <h5 class="text-visa"><img src="~/img/visalogoalt.png" alt="Visa" class="img-fluid" style="height:1em"/> Card Details</h5>
                    <input id="modal-card-holder" type="text" class="form-control w-100 border-visa" placeholder="Card Holder" name="cardHolder"/>
                    <input id="modal-card-number" type="text" class="mt-2 form-control w-100 border-visa" placeholder="Card Number" name="cardNumber"/>
                    <div class="row mt-2">
                        <div class="col-8">
                            <input id="modal-card-expiry" type="text" class="form-control border-visa" placeholder="MM/YYYY" name="cardExpiry"/>
                        </div>
                        <div class="col-4">
                            <input id="modal-card-cvc" type="text" class="form-control border-visa" placeholder="CVC" name="cardCvc"/>
                        </div>
                    </div>
                    <hr/>

                    <h5 class="text-visa">Message</h5>
                    <textarea id="modal-message" class="form-control border-visa" rows="5" placeholder="Write a message for the recipient (optional)" name="message"></textarea>
                    <hr/>

                    <button type="submit" class="btn btn-block btn-visa">Donate now</button>
                </form>
            </div>
        </div>
    </div>
</div>